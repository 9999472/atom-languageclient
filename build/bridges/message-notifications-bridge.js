Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _languageclientV = require('../protocol/languageclient-v2');

let MessageNotificationsBridge = class MessageNotificationsBridge {

  constructor(languageClient, name) {
    this._lc = languageClient;
    this._name = name;
    this._lc.onShowMessage(this.onShowMessage.bind(this));
  }

  dispose() {}

  // TODO: Wire up onShowMessageRequest

  onShowMessage(params) {
    const options = { dismissable: true, detail: this._name };
    switch (params.type) {
      case _languageclientV.MessageType.Error:
        atom.notifications.addError(params.message, options);
        return;
      case _languageclientV.MessageType.Warning:
        atom.notifications.addWarning(params.message, options);
        return;
      case _languageclientV.MessageType.Log:
        console.log(params.message);
        return;
      case _languageclientV.MessageType.Info:
      default:
        atom.notifications.addInfo(params.message, options);
        return;
    }
  }

  static actionItemToNotificationButton(actionItem) {
    return {
      text: actionItem.title
    };
  }
};
exports.default = MessageNotificationsBridge;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2xpYi9icmlkZ2VzL21lc3NhZ2Utbm90aWZpY2F0aW9ucy1icmlkZ2UuanMiXSwibmFtZXMiOlsiTWVzc2FnZU5vdGlmaWNhdGlvbnNCcmlkZ2UiLCJjb25zdHJ1Y3RvciIsImxhbmd1YWdlQ2xpZW50IiwibmFtZSIsIl9sYyIsIl9uYW1lIiwib25TaG93TWVzc2FnZSIsImJpbmQiLCJkaXNwb3NlIiwicGFyYW1zIiwib3B0aW9ucyIsImRpc21pc3NhYmxlIiwiZGV0YWlsIiwidHlwZSIsIkVycm9yIiwiYXRvbSIsIm5vdGlmaWNhdGlvbnMiLCJhZGRFcnJvciIsIm1lc3NhZ2UiLCJXYXJuaW5nIiwiYWRkV2FybmluZyIsIkxvZyIsImNvbnNvbGUiLCJsb2ciLCJJbmZvIiwiYWRkSW5mbyIsImFjdGlvbkl0ZW1Ub05vdGlmaWNhdGlvbkJ1dHRvbiIsImFjdGlvbkl0ZW0iLCJ0ZXh0IiwidGl0bGUiXSwibWFwcGluZ3MiOiI7Ozs7O0FBRUE7O0lBR3FCQSwwQixHQUFOLE1BQU1BLDBCQUFOLENBQWlDOztBQUk5Q0MsY0FBWUMsY0FBWixFQUE4Q0MsSUFBOUMsRUFBNEQ7QUFDMUQsU0FBS0MsR0FBTCxHQUFXRixjQUFYO0FBQ0EsU0FBS0csS0FBTCxHQUFhRixJQUFiO0FBQ0EsU0FBS0MsR0FBTCxDQUFTRSxhQUFULENBQXVCLEtBQUtBLGFBQUwsQ0FBbUJDLElBQW5CLENBQXdCLElBQXhCLENBQXZCO0FBQ0Q7O0FBRURDLFlBQWdCLENBQ2Y7O0FBRUQ7O0FBRUFGLGdCQUFjRyxNQUFkLEVBQStDO0FBQzdDLFVBQU1DLFVBQVUsRUFBRUMsYUFBYSxJQUFmLEVBQXFCQyxRQUFRLEtBQUtQLEtBQWxDLEVBQWhCO0FBQ0EsWUFBT0ksT0FBT0ksSUFBZDtBQUNFLFdBQUssNkJBQVlDLEtBQWpCO0FBQ0VDLGFBQUtDLGFBQUwsQ0FBbUJDLFFBQW5CLENBQTRCUixPQUFPUyxPQUFuQyxFQUE0Q1IsT0FBNUM7QUFDQTtBQUNGLFdBQUssNkJBQVlTLE9BQWpCO0FBQ0VKLGFBQUtDLGFBQUwsQ0FBbUJJLFVBQW5CLENBQThCWCxPQUFPUyxPQUFyQyxFQUE4Q1IsT0FBOUM7QUFDQTtBQUNGLFdBQUssNkJBQVlXLEdBQWpCO0FBQ0VDLGdCQUFRQyxHQUFSLENBQVlkLE9BQU9TLE9BQW5CO0FBQ0E7QUFDRixXQUFLLDZCQUFZTSxJQUFqQjtBQUNBO0FBQ0VULGFBQUtDLGFBQUwsQ0FBbUJTLE9BQW5CLENBQTJCaEIsT0FBT1MsT0FBbEMsRUFBMkNSLE9BQTNDO0FBQ0E7QUFiSjtBQWVEOztBQUVELFNBQU9nQiw4QkFBUCxDQUFzQ0MsVUFBdEMsRUFBOEY7QUFDNUYsV0FBTztBQUNMQyxZQUFNRCxXQUFXRTtBQURaLEtBQVA7QUFHRDtBQXRDNkMsQztrQkFBM0I3QiwwQiIsImZpbGUiOiJtZXNzYWdlLW5vdGlmaWNhdGlvbnMtYnJpZGdlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQGZsb3dcclxuXHJcbmltcG9ydCB7TGFuZ3VhZ2VDbGllbnRWMiwgTWVzc2FnZVR5cGV9IGZyb20gJy4uL3Byb3RvY29sL2xhbmd1YWdlY2xpZW50LXYyJztcclxuaW1wb3J0IHR5cGUge1Nob3dNZXNzYWdlUGFyYW1zLCBTaG93TWVzc2FnZVJlcXVlc3RQYXJhbXMsIE1lc3NhZ2VBY3Rpb25JdGVtfSBmcm9tICcuLi9wcm90b2NvbC9sYW5ndWFnZWNsaWVudC12Mic7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNZXNzYWdlTm90aWZpY2F0aW9uc0JyaWRnZSB7XHJcbiAgX2xjOiBMYW5ndWFnZUNsaWVudFYyO1xyXG4gIF9uYW1lOiBzdHJpbmc7XHJcblxyXG4gIGNvbnN0cnVjdG9yKGxhbmd1YWdlQ2xpZW50OiBMYW5ndWFnZUNsaWVudFYyLCBuYW1lOiBzdHJpbmcpIHtcclxuICAgIHRoaXMuX2xjID0gbGFuZ3VhZ2VDbGllbnQ7XHJcbiAgICB0aGlzLl9uYW1lID0gbmFtZTtcclxuICAgIHRoaXMuX2xjLm9uU2hvd01lc3NhZ2UodGhpcy5vblNob3dNZXNzYWdlLmJpbmQodGhpcykpO1xyXG4gIH1cclxuXHJcbiAgZGlzcG9zZSgpOiB2b2lkIHtcclxuICB9XHJcblxyXG4gIC8vIFRPRE86IFdpcmUgdXAgb25TaG93TWVzc2FnZVJlcXVlc3RcclxuXHJcbiAgb25TaG93TWVzc2FnZShwYXJhbXM6IFNob3dNZXNzYWdlUGFyYW1zKTogdm9pZCB7XHJcbiAgICBjb25zdCBvcHRpb25zID0geyBkaXNtaXNzYWJsZTogdHJ1ZSwgZGV0YWlsOiB0aGlzLl9uYW1lIH07XHJcbiAgICBzd2l0Y2gocGFyYW1zLnR5cGUpIHtcclxuICAgICAgY2FzZSBNZXNzYWdlVHlwZS5FcnJvcjpcclxuICAgICAgICBhdG9tLm5vdGlmaWNhdGlvbnMuYWRkRXJyb3IocGFyYW1zLm1lc3NhZ2UsIG9wdGlvbnMpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgY2FzZSBNZXNzYWdlVHlwZS5XYXJuaW5nOlxyXG4gICAgICAgIGF0b20ubm90aWZpY2F0aW9ucy5hZGRXYXJuaW5nKHBhcmFtcy5tZXNzYWdlLCBvcHRpb25zKTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIGNhc2UgTWVzc2FnZVR5cGUuTG9nOlxyXG4gICAgICAgIGNvbnNvbGUubG9nKHBhcmFtcy5tZXNzYWdlKTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIGNhc2UgTWVzc2FnZVR5cGUuSW5mbzpcclxuICAgICAgZGVmYXVsdDpcclxuICAgICAgICBhdG9tLm5vdGlmaWNhdGlvbnMuYWRkSW5mbyhwYXJhbXMubWVzc2FnZSwgb3B0aW9ucyk7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc3RhdGljIGFjdGlvbkl0ZW1Ub05vdGlmaWNhdGlvbkJ1dHRvbihhY3Rpb25JdGVtOiBNZXNzYWdlQWN0aW9uSXRlbSk6IGF0b20kTm90aWZpY2F0aW9uQnV0dG9uIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIHRleHQ6IGFjdGlvbkl0ZW0udGl0bGVcclxuICAgIH1cclxuICB9XHJcbn1cclxuIl19